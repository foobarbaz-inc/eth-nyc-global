{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Desktop/uniswap_interface/Alternative-Uniswap-Interface/src/CoinSwapper/CoinDialog.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Button, Dialog, Grid, IconButton, makeStyles, TextField, Typography, withStyles } from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CoinButton from \"./CoinButton\";\nimport { doesTokenExist } from \"../ethereumFunctions\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n    backgroundColor: \"#FFFFFF\"\n  },\n  dTitle: {\n    borderRadius: theme.spacing(2),\n    backgroundColor: \"#FFFFFF\"\n  },\n  titleSection: {\n    padding: theme.spacing(2)\n  },\n  titleText: {\n    alignSelf: \"center\"\n  },\n  hr: {\n    margin: 0\n  },\n  address: {\n    paddingLeft: theme.spacing(2.5),\n    paddingRight: theme.spacing(2.5),\n    paddingBottom: theme.spacing(2)\n  },\n  coinList: {\n    height: \"300px\",\n    overflowY: \"scroll\"\n  },\n  coinContainer: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\"\n  }\n});\n\nconst useStyles = makeStyles(styles); // This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: classes.titleSection,\n    ...other,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      alignContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        className: classes.titleText,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: onClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}); // This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    backgroundColor: COLORS.grey[100]\n  }\n}))(MuiDialogActions);\nCoinDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  coins: PropTypes.array.isRequired\n};\nexport default function CoinDialog(props) {\n  _s();\n\n  // The CoinDialog component will display a dialog window on top of the page, allowing a user to select a coin\n  // from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\n  // addresses will first be validated to make sure they exist.\n  // When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\n  // user closes the dialog without selecting anything), or will be a string containing the address of a coin.\n  const classes = useStyles();\n  const {\n    onClose,\n    open,\n    coins,\n    signer,\n    ...others\n  } = props;\n  const [address, setAddress] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\"); // Called when the user tries to input a custom address, this function will validate the address and will either\n  // then close the dialog and return the validated address, or will display an error.\n\n  const submit = () => {\n    if (doesTokenExist(address, signer)) {\n      exit(address);\n    } else {\n      setError(\"This address is not valid\");\n    }\n  }; // Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\n\n\n  const exit = value => {\n    setError(\"\");\n    setAddress(\"\");\n    onClose(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: () => exit(undefined),\n    fullWidth: true,\n    maxWidth: \"sm\",\n    classes: {\n      paper: classes.dialogContainer\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: \"dTitle\",\n      onClose: () => exit(undefined),\n      children: \"Select Coin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: classes.hr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.coinContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        spacing: 1,\n        alignContent: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          value: address,\n          onChange: e => setAddress(e.target.value),\n          variant: \"outlined\",\n          placeholder: \"Paste Address\",\n          error: error !== \"\",\n          helperText: error,\n          fullWidth: true,\n          className: classes.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.coinList,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"column\",\n            children: coins.map((coin, index) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(CoinButton, {\n                coinName: coin.name,\n                coinAbbr: coin.abbr,\n                onClick: () => exit(coin.address)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: classes.hr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        autoFocus: true,\n        onClick: submit,\n        color: \"primary\",\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinDialog, \"WcCDkXJvyWJJjwZ6N6jvAflR1fE=\", false, function () {\n  return [useStyles];\n});\n\n_c = CoinDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinDialog\");","map":{"version":3,"sources":["/Users/sara/Desktop/uniswap_interface/Alternative-Uniswap-Interface/src/CoinSwapper/CoinDialog.js"],"names":["React","Button","Dialog","Grid","IconButton","makeStyles","TextField","Typography","withStyles","MuiDialogTitle","MuiDialogActions","CloseIcon","CoinButton","doesTokenExist","PropTypes","COLORS","styles","theme","dialogContainer","borderRadius","spacing","backgroundColor","dTitle","titleSection","padding","titleText","alignSelf","hr","margin","address","paddingLeft","paddingRight","paddingBottom","coinList","height","overflowY","coinContainer","paddingTop","marginTop","overflow","useStyles","DialogTitle","props","children","classes","onClose","other","DialogActions","root","grey","CoinDialog","propTypes","func","isRequired","open","bool","coins","array","signer","others","setAddress","useState","error","setError","submit","exit","value","undefined","paper","e","target","map","coin","index","name","abbr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  Grid,\n  IconButton,\n  makeStyles,\n  TextField,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CoinButton from \"./CoinButton\";\nimport { doesTokenExist } from \"../ethereumFunctions\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\n\nconst styles = (theme) => ({\n  dialogContainer: {\n    borderRadius: theme.spacing(2),\n    backgroundColor:\"#FFFFFF\",\n  },\n  dTitle: {\n    borderRadius: theme.spacing(2),\n    backgroundColor:\"#FFFFFF\",\n  },\n  titleSection: {\n    padding: theme.spacing(2),\n  },\n  titleText: {\n    alignSelf: \"center\",\n  },\n  hr: {\n    margin: 0,\n  },\n  address: {\n    paddingLeft: theme.spacing(2.5),\n    paddingRight: theme.spacing(2.5),\n    paddingBottom: theme.spacing(2),\n  },\n  coinList: {\n    height: \"300px\",\n    overflowY: \"scroll\",\n  },\n  coinContainer: {\n    paddingLeft: theme.spacing(0.5),\n    paddingRight: theme.spacing(0.5),\n    paddingTop: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    overflow: \"hidden\",\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\n// This is a modified version of MaterialUI's DialogTitle component, I've added a close button in the top right corner\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle\n      disableTypography\n      className={classes.titleSection}\n      {...other}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignContent=\"center\"\n      >\n        <Typography variant=\"h6\" className={classes.titleText}>\n          {children}\n        </Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </Grid>\n    </MuiDialogTitle>\n  );\n});\n\n// This is a modified version of MaterialUI's DialogActions component, the color has been changed by modifying the CSS\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n    backgroundColor: COLORS.grey[100],\n  },\n}))(MuiDialogActions);\n\nCoinDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  coins: PropTypes.array.isRequired,\n};\n\nexport default function CoinDialog(props) {\n  // The CoinDialog component will display a dialog window on top of the page, allowing a user to select a coin\n  // from a list (list can be found in 'src/constants/coins.js') or enter an address into a search field. Any entered\n  // addresses will first be validated to make sure they exist.\n  // When the dialog closes, it will call the `onClose` prop with 1 argument which will either be undefined (if the\n  // user closes the dialog without selecting anything), or will be a string containing the address of a coin.\n\n  const classes = useStyles();\n  const { onClose, open, coins, signer, ...others } = props;\n\n  const [address, setAddress] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  // Called when the user tries to input a custom address, this function will validate the address and will either\n  // then close the dialog and return the validated address, or will display an error.\n  const submit = () => {\n    if (doesTokenExist(address, signer)) {\n      exit(address);\n    } else {\n      setError(\"This address is not valid\");\n    }\n  };\n\n  // Resets any fields in the dialog (in case it's opened in the future) and calls the `onClose` prop\n  const exit = (value) => {\n    setError(\"\");\n    setAddress(\"\");\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={() => exit(undefined)}\n      fullWidth\n      maxWidth=\"sm\"\n      classes={{ paper: classes.dialogContainer }}\n    >\n      <DialogTitle className=\"dTitle\" onClose={() => exit(undefined)}>Select Coin</DialogTitle>\n\n      <hr className={classes.hr} />\n\n      <div className={classes.coinContainer}>\n        <Grid container direction=\"column\" spacing={1} alignContent=\"center\">\n          <TextField\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            variant=\"outlined\"\n            placeholder=\"Paste Address\"\n            error={error !== \"\"}\n            helperText={error}\n            fullWidth\n            className={classes.address}\n          />\n\n          <hr className={classes.hr} />\n\n          <Grid item className={classes.coinList}>\n            <Grid container direction=\"column\">\n              {/* Maps all of the tokens in the constants file to buttons */}\n              {coins.map((coin, index) => (\n                <Grid item key={index} xs={12}>\n                  <CoinButton\n                    coinName={coin.name}\n                    coinAbbr={coin.abbr}\n                    onClick={() => exit(coin.address)}\n                  />\n                </Grid>\n              ))}\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n\n      <hr className={classes.hr} />\n\n      <DialogActions>\n        <Button autoFocus onClick={submit} color=\"primary\">\n          Enter\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}