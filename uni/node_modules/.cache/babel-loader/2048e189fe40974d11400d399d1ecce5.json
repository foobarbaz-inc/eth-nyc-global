{"ast":null,"code":"var _jsxFileName = \"/Users/lelouch/Desktop/ethnyc/eth-nyc-global/Alternative-Uniswap-Interface/src/Liquidity/RemoveLiquidity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport { getBalanceAndSymbol, getReserves } from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport { RemoveLiquidityField1, RemoveLiquidityField2 } from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  values: {\n    width: \"50%\"\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1)\n  },\n  hr: {\n    width: \"100%\"\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\"\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4)\n  }\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar(); // Stores a record of whether their respective dialog window is open\n\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false); // Stores data about their respective coin\n\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  }); // Stores the current reserves in the liquidity pool between coin1 and coin2\n\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]); // Stores the current value of their respective text box\n\n  const [field1Value, setField1Value] = React.useState(\"\"); // Controls the loading button\n\n  const [loading, setLoading] = React.useState(false); // Stores the liquidity tokens balance of the user\n\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\"); // Stores the input and output for the liquidity removal preview\n\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]); // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setReserves(reserves.reverse());\n  }; // These functions take an HTML event, pull the data out and puts it into a state variable.\n\n\n  const handleChange = {\n    field1: e => {\n      setField1Value(e.target.value);\n    }\n  }; // Turns the account's balance into something nice and readable\n\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol) return parseFloat(balance).toPrecision(8) + \" \" + symbol;else return \"0.0\";\n  }; // Turns the coin's reserves into something nice and readable\n\n\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;else return \"0.0\";\n  }; // Determines whether the button should be enabled or not\n\n\n  const isButtonEnabled = () => {\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return coin1.address && coin2.address && parsedInput !== NaN && 0 < parsedInput && parsedInput <= liquidityTokens;\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n    removeLiquidity(coin1.address, coin2.address, field1Value, 0, 0, props.network.router, props.network.account, props.network.signer, props.network.factory).then(() => {\n      setLoading(false); // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n\n      setField1Value(\"\");\n      enqueueSnackbar(\"Removal Successful\", {\n        variant: \"success\"\n      });\n    }).catch(e => {\n      setLoading(false);\n      enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n        variant: \"error\",\n        autoHideDuration: 10000\n      });\n    });\n  }; // Called when the dialog window for coin1 exits\n\n\n  const onToken1Selected = address => {\n    // Close the dialog window\n    setDialog1Open(false); // If the user inputs the same token, we want to switch the data in the fields\n\n    if (address === coin2.address) {\n      switchFields();\n    } // We only update the values if the user provides a token\n    else if (address) {\n        // Getting some token data is async, so we need to wait for the data to return, hence the promise\n        getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin1({\n            address: address,\n            symbol: data.symbol,\n            balance: data.balance\n          });\n        });\n      }\n  }; // Called when the dialog window for coin2 exits\n\n\n  const onToken2Selected = address => {\n    // Close the dialog window\n    setDialog2Open(false); // If the user inputs the same token, we want to switch the data in the fields\n\n    if (address === coin1.address) {\n      switchFields();\n    } // We only update the values if the user provides a token\n    else if (address) {\n        // Getting some token data is async, so we need to wait for the data to return, hence the promise\n        getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin2({\n            address: address,\n            symbol: data.symbol,\n            balance: data.balance\n          });\n        });\n      }\n  }; // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n\n\n  useEffect(() => {\n    console.log(\"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address);\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(data => {\n        setReserves([data[0], data[1]]);\n        setLiquidityTokens(data[2]);\n      });\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]); // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer).then(data => {\n        setTokensOut(data);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer]);\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(data => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account, coin1.address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin1({ ...coin1,\n            balance: data.balance\n          });\n        });\n      }\n\n      if (coin2.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account, coin2.address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin2({ ...coin2,\n            balance: data.balance\n          });\n        });\n      }\n    }, 10000);\n    return () => clearTimeout(coinTimeout);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinDialog, {\n      open: dialog1Open,\n      onClose: onToken1Selected,\n      coins: props.network.coins,\n      signer: props.network.signer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinDialog, {\n      open: dialog2Open,\n      onClose: onToken2Selected,\n      coins: props.network.coins,\n      signer: props.network.signer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WrongNetwork, {\n      open: wrongNetworkOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.fullWidth,\n        children: /*#__PURE__*/_jsxDEV(RemoveLiquidityField1, {\n          activeField: true,\n          value: field1Value,\n          onClick: () => setDialog1Open(true),\n          onChange: handleChange.field1,\n          symbol: coin1.symbol !== undefined ? coin1.symbol : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.fullWidth,\n        children: /*#__PURE__*/_jsxDEV(RemoveLiquidityField2, {\n          activeField: true,\n          onClick: () => setDialog2Open(true),\n          symbol: coin2.symbol !== undefined ? coin2.symbol : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      spacing: 4,\n      className: classes.balance,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.hr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        className: classes.values,\n        direction: \"column\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Balances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatBalance(coin1.balance, coin1.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatBalance(coin2.balance, coin2.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Reserves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(reserves[0], coin1.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(reserves[1], coin2.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Liquidity Pool Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(liquidityTokens, \"UNI-V2\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperContainer,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          spacing: 2,\n          className: classes.fullWidth,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Liquidity Pool Tokens in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(tokensOut[0], \"UNI-V2\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: classes.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Tokens Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(tokensOut[1], coin1.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(tokensOut[2], coin2.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.hr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n        loading: loading,\n        valid: isButtonEnabled(),\n        success: false,\n        fail: false,\n        onClick: remove,\n        children: [/*#__PURE__*/_jsxDEV(ArrowDownwardIcon, {\n          className: classes.buttonIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), \"Remove\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LiquidityRemover, \"bKn8WS5NiQOhpLUTfvxMGcSDRwg=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n\n_c = LiquidityRemover;\nexport default LiquidityRemover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiquidityRemover\");","map":{"version":3,"sources":["/Users/lelouch/Desktop/ethnyc/eth-nyc-global/Alternative-Uniswap-Interface/src/Liquidity/RemoveLiquidity.js"],"names":["React","useEffect","Grid","makeStyles","Paper","Typography","ArrowDownwardIcon","useSnackbar","getBalanceAndSymbol","getReserves","removeLiquidity","quoteRemoveLiquidity","RemoveLiquidityField1","RemoveLiquidityField2","CoinDialog","LoadingButton","WrongNetwork","styles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","width","overflow","background","color","fullWidth","values","title","textAlign","marginBottom","hr","balance","buttonIcon","marginRight","useStyles","LiquidityRemover","props","classes","enqueueSnackbar","dialog1Open","setDialog1Open","useState","dialog2Open","setDialog2Open","wrongNetworkOpen","setwrongNetworkOpen","coin1","setCoin1","address","undefined","symbol","coin2","setCoin2","reserves","setReserves","field1Value","setField1Value","loading","setLoading","liquidityTokens","setLiquidityTokens","tokensOut","setTokensOut","switchFields","reverse","handleChange","field1","e","target","value","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput","NaN","remove","console","log","network","router","account","signer","factory","then","variant","catch","message","autoHideDuration","onToken1Selected","provider","weth","coins","data","onToken2Selected","coinTimeout","setTimeout","clearTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getBalanceAndSymbol,\n  getReserves,\n} from \"../ethereumFunctions\";\nimport { removeLiquidity, quoteRemoveLiquidity } from \"./LiquidityFunctions\";\nimport {\n  RemoveLiquidityField1,\n  RemoveLiquidityField2,\n} from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\n\nconst styles = (theme) => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\",\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  values: {\n    width: \"50%\",\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n  hr: {\n    width: \"100%\",\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\",\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4),\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\nfunction LiquidityRemover(props) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined,\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the liquidity tokens balance of the user\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Stores the input and output for the liquidity removal preview\n  const [tokensOut, setTokensOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: (e) => {\n      setField1Value(e.target.value);\n    },\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol)\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;\n    else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput = parseFloat(field1Value);\n    return (\n      coin1.address &&\n      coin2.address &&\n      parsedInput !== NaN &&\n      0 < parsedInput &&\n      parsedInput <= liquidityTokens\n    );\n  };\n\n  const remove = () => {\n    console.log(\"Attempting to remove liquidity...\");\n    setLoading(true);\n\n    removeLiquidity(\n      coin1.address,\n      coin2.address,\n      field1Value,\n      0,\n      0,\n      props.network.router,\n      props.network.account,\n      props.network.signer,\n      props.network.factory\n    )\n      .then(() => {\n        setLoading(false);\n\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n        setField1Value(\"\");\n        enqueueSnackbar(\"Removal Successful\", { variant: \"success\" });\n      })\n      .catch((e) => {\n        setLoading(false);\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000,\n        });\n      });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = (address) => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(\n        props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = (address) => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account,\n        address,\n        props.network.provider,\n        props.network.signer,\n        props.network.weth.address,\n        props.network.coins\n        ).then((data) => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance,\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\n    );\n\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(\n        coin1.address,\n        coin2.address,\n        props.network.factory,\n        props.network.signer,\n        props.network.account).then(\n        (data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        }\n      );\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity removal.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity removal\");\n      quoteRemoveLiquidity(\n        coin1.address,\n        coin2.address,\n        field1Value,\n        props.network.factory,\n        props.network.signer\n      ).then((data) => {\n        setTokensOut(data);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, props.network.factory, props.network.signer]);\n\n  useEffect(() => {\n    // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n    // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(\n          coin1.address,\n          coin2.address,\n          props.network.factory,\n          props.network.signer,\n          props.network.account\n        ).then((data) => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(\n          props.network.account,\n          coin1.address, props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin1({\n              ...coin1,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account,\n          coin2.address,\n          props.network.provider,\n          props.network.signer,\n          props.network.weth.address,\n          props.network.coins\n          ).then(\n          (data) => {\n            setCoin2({\n              ...coin2,\n              balance: data.balance,\n            });\n          }\n        );\n      }\n    }, 10000);\n\n    return () => clearTimeout(coinTimeout);\n  });\n\n  return (\n    <div>\n      {/* Coin Swapper */}\n      <Typography variant=\"h5\" className={classes.title}></Typography>\n\n      {/* Dialog Windows */}\n      <CoinDialog\n        open={dialog1Open}\n        onClose={onToken1Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <CoinDialog\n        open={dialog2Open}\n        onClose={onToken2Selected}\n        coins={props.network.coins}\n        signer={props.network.signer}\n      />\n      <WrongNetwork\n        open={wrongNetworkOpen}\n      />\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField1\n            activeField={true}\n            value={field1Value}\n            onClick={() => setDialog1Open(true)}\n            onChange={handleChange.field1}\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\n          />\n        </Grid>\n\n        <Grid item xs={12} className={classes.fullWidth}>\n          <RemoveLiquidityField2\n            activeField={true}\n            onClick={() => setDialog2Open(true)}\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\n          />\n        </Grid>\n      </Grid>\n\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        spacing={4}\n        className={classes.balance}\n      >\n        <hr className={classes.hr} />\n        <Grid\n          container\n          item\n          className={classes.values}\n          direction=\"column\"\n          alignItems=\"center\"\n          spacing={2}\n        >\n          {/* Balance Display */}\n          <Typography variant=\"h6\">Your Balances</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin1.balance, coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatBalance(coin2.balance, coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Reserves Display */}\n          <Typography variant=\"h6\">Reserves</Typography>\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[0], coin1.symbol)}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(reserves[1], coin2.symbol)}\n              </Typography>\n            </Grid>\n          </Grid>\n\n          <hr className={classes.hr} />\n\n          {/* Liquidity Tokens Display */}\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\n          <Grid container direction=\"row\" justifyContent=\"center\">\n            <Grid item xs={6}>\n              <Typography variant=\"body1\" className={classes.balance}>\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Paper className={classes.paperContainer}>\n          {/*Red  Display to show the quote */}\n          <Grid\n            container\n            item\n            direction=\"column\"\n            alignItems=\"center\"\n            spacing={2}\n            className={classes.fullWidth}\n          >\n            {/* Tokens in */}\n            <Typography variant=\"h6\">Liquidity Pool Tokens in</Typography>\n            <Grid container direction=\"row\" justifyContent=\"center\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[0], \"UNI-V2\")}\n                </Typography>\n              </Grid>\n            </Grid>\n\n            <hr className={classes.hr} />\n\n            {/* Liquidity Tokens Display */}\n            <Typography variant=\"h6\">Tokens Out</Typography>\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[1], coin1.symbol)}\n                </Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography variant=\"body1\" className={classes.balance}>\n                  {formatBalance(tokensOut[2], coin2.symbol)}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n        <hr className={classes.hr} />\n      </Grid>\n\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\n        <LoadingButton\n          loading={loading}\n          valid={isButtonEnabled()}\n          success={false}\n          fail={false}\n          onClick={remove}\n        >\n          <ArrowDownwardIcon className={classes.buttonIcon} />\n          Remove\n        </LoadingButton>\n      </Grid>\n    </div>\n  );\n}\n\nexport default LiquidityRemover;\n"]},"metadata":{},"sourceType":"module"}